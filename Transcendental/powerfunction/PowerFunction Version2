package Transcendental;

/**
 *
 * @author Xindi
 *
 * COMP 5541 Calculator Project
 *
 * Power function 10^x implemntation for Transcendental Functions
 *
 *
 * Compute the 10^x for all x belongs to rational numbers
 * Using Taylor expansions and Limit
 *
 * @version 2
 *
 */
public class PowerFunction {

    
    /**
     * Taylor Expansion
     *
     * 10^x = 1 + (ln10)x + (((ln10)^2)x^2)/2! + ..... + (((ln10)^n)x^n)/n!
     *
     * @param power input value
     * @return power function value
     *
     */
     
     
    public static double powerFunctionTaylor(double power){

        double sum= 1.0;
        double term = 1.0;
        double xln10 = power * Math.log(10);
        int i = 1;

        if(power<0){
            return 1/powerFunction(-power);
        }
        while(term>1e-12){

            term *= xln10/i;
            sum += term;
            i++;

        }
        double s = sum%1;
        if (s>0.99999){
            sum=sum-s+1;
        }else if(s<0.000001){
            sum=sum-s;
        }
        return sum;
    }


    /**
     * Limit
     *
     * 10^x can be written as e^(xln10), use limit: e^(xln10) = lim(n-->infinity)(1+(xln10)/n)^n
     *
     * @param power input value
     * @return power function value
      */

    public static double powerFuctionLimit(double power){

        double sum = 1.0;
        int largeNumber = 999999999;

        for(int i = 0; i<largeNumber; i++){

            double term = power * Math.log(10);
            sum *= (1+term/largeNumber);

        }

        return sum;

    }
}
